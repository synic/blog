{
  "publishedAt": "2007-03-24T20:00:00-07:00",
  "body": "\u003cp\u003eHere's a little info about how/why I got into vim.\u003c/p\u003e\n\u003cp\u003eI've been a professional programmer since 1998. I've gone through a number of\ntext editors, most of which I've felt pretty meh about.  For a long time, I\nused an editor called \u003ca href=\"http://glimmer.sf.net\"\u003eGlimmer\u003c/a\u003e, simply\nbecause it supported multiple languages (and by supported, I mean it had syntax\nhighlighting for them) and it had tabs.  This is the basis of what I\nlike in an editor. I stopped using Glimmer, because the author stopped putting\nout releases. Not necessarily that it wasn't a good editor.\u003c/p\u003e\n\u003cp\u003eI never really liked any IDE's, because even if they did support multiple\nlanguages, it was in a limited or style changing fashion.\u003c/p\u003e\n\u003cp\u003eWhen I started writing JBother in 2003, I switched to jEdit.  I love this\neditor. It was simple and everything I needed. I started using plugins like\nthe ProjectManager (which allowed you to manage different projects in an easy\nand intuitive way) and JavaStyle (which would format your Java code to whatever\nstandards you specified). jEdit's power is in it's plugins.  I would guess\nthat it has somewhere aound 100 of them (I'm merely guessing here), from code\nformatting to CVS integration, whitespace management, FTP support, and more.\nA complete list can be found \u003ca href='http://plugins.jedit.org/'\u003ehere\u003c/a\u003e.\njEdit at it's base is a very very simple editor, and most people are put off by\nthis. Most applications don't leave most of their power to plugins, although, I\nthink it's the way to go :)\u003c/p\u003e\n\u003cp\u003eAt this point, I had been using vim to edit config files on the server and\nsuch, and knew the very basics of navigation and searching.  I had been very\naware that it \u003ci\u003ecould\u003c/i\u003e be a very powerful text editor for programmers, but\nI was put off by the fact that there wasn't any easy way to manage multiple\nfiles - to me, this was essential.  I did some googling early on, and found the\n\u003ca href='http://www.vim.org/scripts/script.php?script_id=159'\u003eminibufexpl\u003c/a\u003e\nplugin which allowed for so called \u0026quot;tabs\u0026quot; in your vim window, but it was ugly\nand didn't work how you expected it to sometimes.\u003c/p\u003e\n\u003cp\u003eAbout the same time I started \u003ca href='http://www.exaile.org'\u003eExaile\u003c/a\u003e (March\n2006), I discovered \u003ca\nhref='http://www.vim.org/scripts/script.php?script_id=69'\u003eproject.vim\u003c/a\u003e.  An\nexample of this script/plugin can be\nseen \u003ca href='http://binary.twi.gs/vim.png'\u003ehere, on the left\u003c/a\u003e.  This was\nwhat I was looking for.  It allowed you to manage all the files in your\nproject, quickly and easily.  You can add files in directories manually by\nsimply typing them in, or you can have the plugin do it automatically based on\na filter.  Once you have them in there, you can just hit enter on a file to\nopen it in the window on the right, type \\S to split the window on the right\nand open the file in the bottom, or you can even just double click on a file to\nopen it.   Beyond what I use it for, you can specify a vim script that will\nexecute when you open a file, and one to execute when you close a file.\nAbsolute awesomeness right here.\u003c/p\u003e\n\u003cp\u003eThat same day I vowed to learn vim, and uninstalled jEdit.  It has been one of\nthe most productive things I've done since I started programming.  In about 2\nweeks, I was editing more efficiently and learning quickly.\u003c/p\u003e\n\u003cp\u003eVim.  If you're having second thoughts because of the learning curve, just stop\nit.  You will thank yourself later.\u003c/p\u003e\n\u003cdiv class='vimtip'\u003e\n  \u003ch3\u003e\n    \u003cb\u003evim tip:\u003c/b\u003e \u003ci\u003eCounts\u003c/i\u003e\n  \u003c/h3\u003e\n  \u003cp\u003e\n    With every command given in command mode, you can specify the number of\n    times you want it to be done.  For example, the letter \u003ccode\u003ek\u003c/code\u003e moves the\n    cursor up one line, but if you type \u003ccode\u003e5k\u003c/code\u003e, it moves the cursor up 5\n    lines.  I'm fairly sure this works with every command in vim.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"restored-from-archive\"\u003e\n  \u003ch3\u003eRestored from VimTips archive\u003c/h3\u003e\n  \u003cp\u003e\n  This article was restored from the VimTips archive. There's probably\n  missing images and broken links (and even some flash references), but it\n  was still important to me to bring them back.\n  \u003c/p\u003e\n\u003c/div\u003e",
  "summary": "\u003cp\u003eHere's a little info about how/why I got into vim...\u003c/p\u003e\n",
  "title": "... Vim?",
  "slug": "vim",
  "tags": [
    "Programming",
    "VIM"
  ],
  "isPublished": true,
  "openGraph": {
    "title": "... Vim?",
    "type": "article"
  }
}