{
  "publishedAt": "2007-05-16T12:31:00-07:00",
  "body": "\u003cp\u003e\u003cspan class=\"caps\"\u003eGNOME\u003c/span\u003e 2.18 introduced a new way for applications\nto handle multimedia keys.  Previously you have to muck around with X events,\nwhile now \u003cspan class=\"caps\"\u003eGNOME\u003c/span\u003e does it for you and you can get\ncontrol of mmkeys by requesting through D-Bus (to \u003cspan\nclass=\"caps\"\u003eGNOME\u003c/span\u003e Control Center\u0026#8217;s Settings Daemon).  All\ngood until you realise that for cross-desktop support you still need the\nold method anyway\u0026#8212;unless, like Rhythmbox and Banshee, your app is\nGNOME-based.\u003c/p\u003e\n\u003cp\u003eFew people are aware of this change\u0026#8212;most only realised after their\nmmkeys didn\u0026#8217;t work anymore (\u003ca\nhref=\"https://bugs.launchpad.net/ubuntu/+source/rhythmbox/+bug/32917\"\u003eRhythmbox\u003c/a\u003e,\n\u003ca href=\"http://bugzilla.gnome.org/show_bug.cgi?id=395433\"\u003eBanshee\u003c/a\u003e, \u003ca\nhref=\"http://www.exaile.org/trac/ticket/399\"\u003eExaile\u003c/a\u003e, \u003ca\nhref=\"https://bugs.launchpad.net/ubuntu/+source/quodlibet/+bug/43464/comments/23\"\u003eQuod\nLibet\u003c/a\u003e, \u003ca href=\"http://bugs.kde.org/show_bug.cgi?id=145239\"\u003eAmarok\u003c/a\u003e).  I\ncouldn\u0026#8217;t find any documentation regarding the new method, so I decided to\nwrite one to help other media player writers.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eBus name\u003c/strong\u003e: org.gnome.SettingsDaemon\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eObject path\u003c/strong\u003e: /org/gnome/SettingsDaemon\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eInterface\u003c/strong\u003e: org.gnome.SettingsDaemon\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eMethods\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eGrabMediaPlayerKeys\u003c/strong\u003e(application, time)\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eapplication\u003c/code\u003e is simply the application name.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etime\u003c/code\u003e determines which application name gets sent with the\nMediaPlayerKeyPressed signal if multiple applications have registered\ninterest in controlling mmkeys.  Rhythmbox uses 0 for \u003cem\u003etime\u003c/em\u003e\n(I think 0 simply pushes your application to a stack), so\nthat’s probably what you should use as well.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eReleaseMediaPlayerKeys\u003c/strong\u003e(application)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSignals\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eMediaPlayerKeyPressed\u003c/strong\u003e(application, key)\n\u003cul\u003e\n\u003cli\u003eMust check that \u003cem\u003eapplication\u003c/em\u003e is your application name.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ekey\u003c/code\u003e can be ‘Play’, ‘Pause’,\n‘Stop’, ‘Next’, and ‘Previous’\n(at least in current gnomecc).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003ca href=\"http://exaile.org/trac/changeset/2255\"\u003eExaile\u0026#8217;s revision\n2255\u003c/a\u003e shows how we added common mmkeys support to Exaile.  I have made the\nMmKeys class generic so other players can also use it if they want to.  Note\nthat I\u0026#8217;ve added a \u0026#8216;PlayPause\u0026#8217; key to match the signal from\nthe mmkeys module.\u003c/p\u003e\n\u003cp\u003eThis post has been in my blog queue for some time, and meanwhile in the Quod\nLibet world, Joe Wreschnig has \u003ca\nhref=\"https://bugs.launchpad.net/ubuntu/+source/quodlibet/+bug/43464/comments/21\"\u003erefused\u003c/a\u003e\nto add \u003cspan class=\"caps\"\u003eGNOME\u003c/span\u003e mmkeys support to the core, Facundo\nBatista \u003ca\nhref=\"https://bugs.launchpad.net/ubuntu/+source/quodlibet/+bug/43464/comments/23\"\u003ecreated\na patch\u003c/a\u003e that does it anyway, and Ronny Haryanto \u003ca\nhref=\"https://bugs.launchpad.net/ubuntu/+source/quodlibet/+bug/43464/comments/25\"\u003ecreated\na plugin\u003c/a\u003e based on the patch (and \u003ca\nhref=\"http://ronny.haryan.to/archives/2007/05/11/d-bus-multimedia-keys-plugin-for-quod-libet/\"\u003eblogged\u003c/a\u003e\nabout it).  The plugin does a few things incorrectly, so \u003cdel\u003eI\u0026#8217;ll\nnotify\u003c/del\u003e \u003cins\u003eI\u0026#8217;ve notified\u003c/ins\u003e Ronny about it.\u003c/p\u003e\n\u003cp\u003eAcknowledgements:\n\u003cul\u003e\n\u003cli\u003eThanks to Albert Bicchi for alerting me in #exaile to this change.\u003c/li\u003e\n\u003cli\u003eThe information here is based on the source codes of \u003ca\nhref=\"http://svn.gnome.org/viewcvs/gnome-control-center/trunk/gnome-settings-daemon/gnome-settings-dbus.c?view=markup\"\u003e\u003cspan\nclass=\"caps\"\u003eGNOME\u003c/span\u003e Control Center\u003c/a\u003e and \u003ca\nhref=\"http://svn.gnome.org/viewcvs/rhythmbox/trunk/plugins/mmkeys/rb-mmkeys-plugin.c?view=markup\"\u003eRhythmbox\u003c/a\u003e,\nand also a patch for \u003ca\nhref=\"http://bugzilla.gnome.org/show_bug.cgi?id=395433#c1\"\u003eBanshee\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\u003c/p\u003e\n\u003cp\u003eNo thanks to \u003cspan class=\"caps\"\u003eGNOME\u003c/span\u003e for being quiet about this mass\napplication breakage.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUpdate 2007-05-16:\u003c/strong\u003e Just found out that this has also been\nfixed in \u003ca href=\"http://www.listen-project.org/ticket/606\"\u003eListen\u003c/a\u003e some\ntime ago, yay!\u003c/p\u003e\n\u003cdiv class='vimtip'\u003e\n\u003ch3\u003e\u003cb\u003evim tip:\u003c/b\u003e \u003ci\u003eColor schemes\u003c/i\u003e\u003c/h3\u003e\n\u003cp\u003e\nTired of looking at the same colours in Vim all the time?  Use the\n\u003ccode\u003ecolorscheme\u003c/code\u003e (\u003ccode\u003ecolo\u003c/code\u003e) command.  For example, try\n\u003ccode\u003e:colorscheme evening\u003c/code\u003e (if you want to revert, the default scheme is\nnamed \u0026#8220;default\u0026#8221;).  The effects of colour schemes are more noticable\nwhen you\u0026#8217;re using GVim.\n\u003cp\u003eThere are a few colour schemes included with Vim, normally located in\n\u003ccode\u003e/usr/share/vim/vimXX/colors/\u003c/code\u003e (XX is 70 if you use Vim 7.0).\u003c/p\u003e\n\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"restored-from-archive\"\u003e\n  \u003ch3\u003eRestored from VimTips archive\u003c/h3\u003e\n  \u003cp\u003e\n  This article was restored from the VimTips archive. There's probably\n  missing images and broken links (and even some flash references), but it\n  was still important to me to bring them back.\n  \u003c/p\u003e\n\u003c/div\u003e",
  "summary": "\u003cp\u003e\u003cspan class=\"caps\"\u003eGNOME\u003c/span\u003e 2.18 introduced a new way for applications\nto handle multimedia keys.  Previously you have to muck around with X events,\nwhile now \u003cspan class=\"caps\"\u003eGNOME\u003c/span\u003e does it for you and you can get\ncontrol of mmkeys by requesting through D-Bus (to \u003cspan\nclass=\"caps\"\u003eGNOME\u003c/span\u003e Control Center\u0026#8217;s Settings Daemon).  All\ngood until you realise that for cross-desktop support you still need the\nold method anyway\u0026#8212;unless, like Rhythmbox and Banshee, your app is\nGNOME-based.\u003c/p\u003e\n\u003cp\u003eThis article shows how we support both methods in Exaile, and how you can do\nit, too.\u003c/p\u003e",
  "title": "Handling multimedia keys in GNOME 2.18",
  "slug": "handling-multimedia-keys-in-gnome-218",
  "tags": [
    "Exaile",
    "Programming"
  ],
  "isPublished": true,
  "openGraph": {
    "title": "Handling multimedia keys in GNOME 2.18",
    "type": "article"
  }
}