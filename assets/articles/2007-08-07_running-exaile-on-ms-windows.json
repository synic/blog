{
  "publishedAt": "2007-08-07T16:47:40-07:00",
  "body": "\u003cp\u003eExaile now runs on Windows, and runs quite well.  Thanks to the GStreamer\nand Songbird people who recently ported GStreamer to Windows.\u003c/p\u003e\n\u003cp\u003eFunctionally this is equivalent to the patched version in \u003ca\nhref=\"http://www.exaile.org/trac/ticket/200\"\u003eticket #200\u003c/a\u003e, only using\nGStreamer instead of Windows Media Player.\u003c/p\u003e\n\u003cp\u003eAs ticket #200 shows, it really doesn\u0026#8217;t take much to make Exaile run\non Windows.  Most of it was already cross-platform, largely thanks to the\ninsistence on using \u003ccode\u003eos.sep\u003c/code\u003e and \u003ccode\u003eos.path.join\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cb\u003eHow good\u003c/b\u003e\u003c/p\u003e\n\u003cp\u003eIt\u0026#8217;s as stable and fast as in Linux, and the majority of features work\nperfectly.  Memory consumption is rather high, but then it\u0026#8217;s high even in\nLinux.\u003c/p\u003e\n\u003cp\u003e\u003cb\u003eHow bad\u003c/b\u003e\u003c/p\u003e\n\u003cp\u003eEncoding errors abound.  Don\u0026#8217;t expect to be able to import most of\nyour library.\u003c/p\u003e\n\u003cp\u003eAnything to do with D-Bus has been chopped off and won\u0026#8217;t work.  In\nother words, Exaile doesn\u0026#8217;t depend on D-Bus anymore; but that\u0026#8217;s a\nhack, not a feature.  I\u0026#8217;m still hoping for D-Bus and dbus-python on\nWindows so I can remove the hack.\u003c/p\u003e\n\u003cp\u003eThings go wrong when Exaile reloads open playlists from the previous\nsession.  From the symptoms, I\u0026#8217;m guessing that Exaile thinks those tracks\nare streams.\u003c/p\u003e\n\u003cp\u003e\u003cb\u003eHow it looks\u003c/b\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNOTE:\u003c/strong\u003e \u003cem\u003eUnfortunately, this image has been lost to time.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003cb\u003eHow\u003c/b\u003e\u003c/p\u003e\n\u003cp\u003eThe changes I made are set for Exaile 0.2.11.  For now they\u0026#8217;re only\navailable in trunk.\u003c/p\u003e\n\u003cp\u003eThe requirements are basically identical to the ones mentioned \u003ca\nhref=\"http://www.exaile.org/requirements\"\u003ein Exaile\u0026#8217;s Website\u003c/a\u003e, except\nthat you don\u0026#8217;t get to \u003ccode\u003eapt-get\u003c/code\u003e them.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://www.python.org/\"\u003ePython\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://gladewin32.sourceforge.net/\"\u003e\nGTK+ and libglade for Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.pygtk.org/\"\u003ePyGTK and its dependencies\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://gstreamer.freedesktop.org/\"\u003e\nGStreamer, its plugins, and its Python bindings\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.sacredchao.net/quodlibet/wiki/Development/Mutagen\"\u003e\nMutagen\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eFor Python \u003c 2.5,\n\u003ca href=\"http://www.initd.org/tracker/pysqlite/wiki/pysqlite\"\u003epysqlite\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eFor Python \u003c 2.5,\n\u003ca href=\"http://effbot.org/zone/element-index.htm\"\u003eElementTree\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eRight now binary GStreamer Python bindings are only available in the \u003cspan\nclass=\"caps\"\u003eCVS\u003c/span\u003e packages, and they\u0026#8217;re compiled for Python 2.4 so\nyou\u0026#8217;ll need the 2.4 version of everything.\u003c/p\u003e\n\u003cdiv class='vimtip'\u003e\n\u003ch3\u003e\u003cstrong\u003evim tip:\u003c/strong\u003e \u003ci\u003eWrapping text\u003c/i\u003e\u003c/h3\u003e\n\u003cp\u003e\nSometimes it\u0026#8217;s useful to wrap text at a specified column.  You can use\nVim\u0026#8217;s \u003ccode\u003egq\u003c/code\u003e command and \u003ccode\u003etextwidth\u003c/code\u003e\n(\u003ccode\u003etw\u003c/code\u003e) option to do this.  Now, Vim has tons of options for wrapping\nlines (it can even autowrap text while you\u0026#8217;re typing) and \u003ccode\u003egq\u003c/code\u003e\nitself can be used in many different ways, but I normally use \u003ccode\u003egq\u003c/code\u003e\nto wrap a block of comments after I finished writing it.  Simply select the\nlines you want to format (in Visual mode) and hit \u003ccode\u003egq\u003c/code\u003e.  The\nwrapping column is determined by \u003ccode\u003etextwidth\u003c/code\u003e, e.g. \u003ccode\u003e:set\ntw=80\u003c/code\u003e to wrap at column 80.\n\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"restored-from-archive\"\u003e\n  \u003ch3\u003eRestored from VimTips archive\u003c/h3\u003e\n  \u003cp\u003e\n  This article was restored from the VimTips archive. There's probably\n  missing images and broken links (and even some flash references), but it\n  was still important to me to bring them back.\n  \u003c/p\u003e\n\u003c/div\u003e",
  "summary": "\u003cp\u003eExaile now runs on Windows, and runs quite well.  Thanks to the GStreamer and\nSongbird people who recently ported GStreamer to Windows...\u003c/p\u003e\n",
  "title": "Running Exaile on MS Windows",
  "slug": "running-exaile-on-ms-windows",
  "tags": [
    "Exaile"
  ],
  "isPublished": true,
  "openGraph": {
    "title": "Running Exaile on MS Windows",
    "type": "article"
  }
}