{
  "publishedAt": "2007-08-21T03:12:19-07:00",
  "body": "\u003cp\u003eI'll admit. I didn't think this really happened to sites as\nsmall as exaile.org, where they are running Linux and not too many services,\nbut I guess that type of thinking is what leads to these types of things...\u003c/p\u003e\n\u003cp\u003eAfter it happened I began reading blog posts and other material regarding\nrootkits and security.  I was surprised, and rather distraught to find out that\nthis type of thing happens more than you might think, and that in most cases,\nthe owner of the machine in question doesn't even know that it's\nhappened.  I don't know about you, but that worries me to death.  If\nthat's the case, you might be wondering how I found out?\u003c/p\u003e\n\u003cp\u003eFirst off, ssh starts acting weird.  Instead of the usual:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eThe authenticity of host 'host.tld (3.344.33.67)'; can't be established.\nRSA key fingerprint is e7:f9:61:d4:d3:f7:0c:42:3a:dc:39:4D:89:2b:7b:f8.\n\nAre you sure you want to continue connecting (yes/no)?\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ethat you get when you're trying to connect to a host you've\nnever connected to before, I was getting some error message regarding\n\u0026#8220;public keys\u0026#8221; that I've never seen before, and even weirder,\nI was getting it when trying to connect to hosts I had already accepted the\npublic key for.  I did some manpage reading, and wondered if I had\ninadvertently switched my preferred authentication type when I was playing\naround with \u003ca\nhref='http://www-personal.umich.edu/~mressl/webshell/'\u003eWebShell\u003c/a\u003e (who knows,\nmaybe webshell is the cause of all my problems).  The error message I was\ngetting made me thing I had somehow switched to publickey authentication.  So,\nI tried passing the \u003ccode\u003e-o\nPreferredAuthentications=password,keyboard-interactive\u003c/code\u003e.  I got an error\nsaying \u0026#8220;-o PreferredAuthentications is an invalid option\u0026#8221;.\u003c/p\u003e\n\u003cp\u003eNow, I'm no \u003cspan class=\"caps\"\u003eSSH\u003c/span\u003e expert, but I had used that\noption before, and it mentions is specifically in the manpage.  By this point,\nI think I've totally broken something.  Again, I know I'm not an\n\u003cspan class=\"caps\"\u003eSSH\u003c/span\u003e expert, so I take the Windows approach.  I decide\nthat I'm going to just remove ~/.ssh and reinstall openssh-client.\napt-get appears to remove everything correctly, but upon reinstall, it claims\nit can't overwrite /usr/bin/ssh because the \u0026#8220;Operation is not\npermitted\u0026#8221;.  What?  I'm root.  I should be able to remove whatever\nI want.  I jump into #openssh on freenode.  I ask them if there is some sort of\nbuilt in block for security regarding this.  \u003c/p\u003e\n\u003cp\u003eAfter fiddling around and with some suggestions from a user in that channel,\nI find out that, for whatever reason, /usr/bin/ssh has been giving the ext2\nattributes of \u0026#8220;+uia\u0026#8221;.  These attributes are set using the\n\u003ccode\u003echattr\u003c/code\u003e command.  From the chattr manpage:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cb\u003e+a\u003c/b\u003e: A file with the ‘a’ attribute set can only be open in append\nmode  for   writing.    Only   the   superuser   or   a   process   possessing\nthe     CAP_LINUX_IMMUTABLE capability can set or clear this attribute. \u003c/li\u003e\n\u003cli\u003e\u003cb\u003e+i\u003c/b\u003e: A file with the ‘i’ attribute cannot be modified: it cannot be\ndeleted or  renamed,  no  link  can  be created to this file and no data can be\nwritten to the file.  Only the superuser or a  process  possessing  the\nCAP_LINUX_IMMUTABLE capability can set or clear this attribute.\u003c/li\u003e\n\u003cli\u003e\u003cb\u003e+u\u003c/b\u003e: When  a  file  with  the ‘u’ attribute set is deleted, its\ncontents are saved.  This allows the user to ask for its undeletion.\n\u003c/ul\u003e\n\u003cp\u003eOk\u0026#8230;. great.  I had seen the +i attribute before and knew about chattr\nfrom my gentoo days.  +i is used on the ext3 journal file.  No big deal, I\nfigure this is something debian has done for extra security.  I unset the\nattributes with \u003ccode\u003echattr -iua\u003c/code\u003e.  I try to reinstall openssh-client\nagain.  Same thing happens, only with ssh-add.  I go to /usr/bin and run\n\u003ccode\u003echattr -iua ssh-*\u003c/code\u003e.  The reinstall goes well this time.  Ssh\nhowever, is still acting weird.  I'm getting a little weirded out now.  I\ntype \u003ccode\u003ewhich ssh\u003c/code\u003e.  What does it return?  \u003cb\u003e/usr/local/bin/ssh\u003c/b\u003e.\n\u003cspan class=\"caps\"\u003eWHAT\u003c/span\u003e \u003cspan class=\"caps\"\u003eTHE\u003c/span\u003e HELL?!!?  Now I\nknow I've been hacked, there's no reason anything would be in\n/usr/local/anything on this machine.  I check /usr/local/bin and notice\nthere's a myriad of ssh-related commands.\u003c/p\u003e\n\u003cp\u003eI start scouring the logs.  I see things like this: \u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eAug 20 07:42:54 sp su: Successful su for nobody by root\nAug 20 07:42:54 sp su: + ??? root:nobody\nAug 20 07:42:54 sp su: (pam_unix) session opened for user nobody by (uid=0)\nAug 20 07:42:54 sp su: (pam_unix) session closed for user nobody\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eI'm freaking.  Why is root suing to nobody?  (I later find out that\nthis is the cronjob that runs daily for the find utility, and it's\ntotally normal).  I check other files in /usr/bin with lsattr.  Most of them\nare set +iua.  I keep looking around\u0026#8230; using \u003ccode\u003eps aux\u003c/code\u003e and\nlooking for processes out of the ordinary.  I look around in my web\ndirectories\u0026#8230; and in http://www.exaile.org/files, I find a directory\nthat's just named \u0026#8220;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026#8221;.  That's\nright, four spaces.  Inside is a directory called \u0026#8220;www.irs.gov\u0026#8221;,\nand inside that\u0026#8230;. what do I find?  A couple of html files and a php\nscript designed to convince whoever that they are on the irs.gov website, and\nthat they are entitled to a sum of over $100 as a return, so long as they fill\nout their credit card information.  A quick look at the php script shows that\nthe information is just logging to a file.  Nothing is in the file\u0026#8230;\nyet.\u003c/p\u003e\n\u003cp\u003eI keep looking around\u0026#8230; at this point, I'm sued to root.\nSuddenly, I see a line that says \u0026#8220;Killed\u0026#8221;, and I'm back at my\nuser prompt.  Someone had killed my bash session.  The \u003ccode\u003ewho\u003c/code\u003e command\nshowed only me.  I su back to root.  Killed again, and then once more, and\nI'm totally kicked off the server.  I try to log back in, and my password\ndoesn't work.  You can imagine how I felt.  I wonder to myself \u0026#8220;can\nI log into my webhosting companies support panel and shut the server\ndown?\u0026#8221;  I try sshing as root, and am able to get in with the root\npassword (I know, I know, I shouldn't have root logins enabled).  I\nquickly type \u0026#8216;halt'.  \u003c/p\u003e\n\u003cp\u003eWorst feeling ever.  I'm not worried about exaile.org or any of my\nother opensource websites.  I'm kind of a backup nazi\u0026#8230; but\nit's the other sites I'm hosting for my friends and their companies\nthat I'm worried about.  They can't access their websites, they\ncan't get their mail.\u003c/p\u003e\n\u003cp\u003eHow does one recover from this?  I found out that my hosting company, for\n$70 (which I didn't have at the time), will set me up an entirely fresh\ninstall of Debian on a new drive with my old drive as a slave.  It took me a\ncouple of days to get the money in my account to be able to do so.  During this\ntime is when I'm doing my research.\u003c/p\u003e\n\u003cp\u003eI got my hands on a couple rootkit tarballs.  I was able to read the source\nof them, and found out, that at least for \u003cb\u003eshv5\u003c/b\u003e, modifying\n\u003ccode\u003echattr\u003c/code\u003e (by renaming it and replacing it with a script) would\nrender the kit totally useless.  Probably other things like renaming tar and\netc would stop a script kiddie.\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"caps\"\u003eHOWEVER\u003c/span\u003e, I realize that these are just little\nsteps (read: hacks) in securing a website.  I know that it starts with having a\nsecure setup in the first place\u0026#8230; but again, I'm not an expert on\nthis either.  So how does a n00b like me secure their piddly servers?  I really\ndon't know.  What I do know is that I was being very lax in the first\nplace.  I was running proftpd, and I didn't need to be.  I was sending\nftp passwords to people on irc via message, though in plain text.  My web\ndirectory permissions were often just \u0026#8220;777\u0026#8221; to make things easier\nwhen I couldn't figure out why something wasn't working.  I had\nheard that the imap and pop3 server (courier) I was using was insecure, but I\nreally wasn't doing anything about it, and I wasn't keeping up on\nmy security updates.  I was running a private \u003cspan class=\"caps\"\u003eIRC\u003c/span\u003e\nserver that was accessible publicly.  I'm running \u003cspan\nclass=\"caps\"\u003ePHP\u003c/span\u003e... I've always heard that's a bad idea.\nProbably a bunch of other things.\u003c/p\u003e\n\u003cp\u003eI've got my server back up, and most of the above problems are\ncorrected\u0026#8230; all but courier, which is still running, and \u003cspan\nclass=\"caps\"\u003ePHP\u003c/span\u003e, which I'm still using.  I've got courier\nlimited via iptables to certain IPs because I really don't know what else\nto do.  All my users' current email depends on courier.\u003c/p\u003e\n\u003cp\u003eI know that I'm lucky in this case.  If the attacker had been anything\nmore than a 13 year old running scripts, I'd probably be hosting some\ncrazy phishing site and a number of \u003cspan class=\"caps\"\u003eIRC\u003c/span\u003e bots right\nnow without knowing it.  I've still got the old drive accessible as a\nslave, but I don't know what to do with it (is there a way to find out\nhow the attacker got in?)\u003c/p\u003e\n\u003cp\u003eAnyway.  That's my story for the day.  If any of you have any\nsuggestions, I'd be glad to hear them.\u003c/p\u003e\n\u003cp\u003eI'm tired.  No vim tip for today\u0026#8230; other than this:  Scrolling is\nmuch faster in gVIM.  Just a random note.\u003c/p\u003e\n\u003cdiv class=\"restored-from-archive\"\u003e\n  \u003ch3\u003eRestored from VimTips archive\u003c/h3\u003e\n  \u003cp\u003e\n  This article was restored from the VimTips archive. There's probably\n  missing images and broken links (and even some flash references), but it\n  was still important to me to bring them back.\n  \u003c/p\u003e\n\u003c/div\u003e",
  "summary": "\u003cp\u003eI'll admit. I didn't think this really happened to sites as\nsmall as exaile.org, where they are running Linux and not too many services,\nbut I guess that type of thinking is what leads to these types of things...\u003c/p\u003e\n",
  "title": "Exaile.org gets hacked!",
  "slug": "exaileorg-gets-hacked",
  "tags": [
    "Exaile",
    "Security"
  ],
  "isPublished": true,
  "openGraph": {
    "title": "Exaile.org gets hacked!",
    "type": "article"
  }
}