{
  "publishedAt": "2008-11-26T00:24:01-07:00",
  "body": "\u003cp\u003eAt work, I use git.  For Exaile I use bzr.  I like them both quite a bit.\nAt work, we use \u003ca\nhref='http://eagain.net/gitweb/?p=gitosis.git;a=summary'\u003eGitosis\u003c/a\u003e to manage\nour repositories and I have to say, it's pretty damn cool.  Nothing quite like\nthis exists for bzr, so I ported Gitosis to bzr and called it Bazitis.  The\nlaunchpad project page can be found \u003ca\nhref='http://www.launchpad.net/bazitis'\u003ehere\u003c/a\u003e.  Here are the instructions on\nhow to use Bazitis:\u003c/p\u003e\n\u003cp\u003eFirst off, I'd like to give credit to some people.  Tommi Virtanen is the\nauthor of Gitosis.  Bazitis is a copy of the Gitosis code, all except for the\nparts where I had to get a little hacky with bzrlib.  His website is \u003ca\nhref='http://eagain.net'\u003ehttp://eagain.net\u003c/a\u003e.  The other person I'd like to\nthank is Garry Dolley, who wrote a great blog post on how to use Gitosis, which\ncan be found here: \u003ca\nhref='http://scie.nti.st/2007/11/14/hosting-git-repositories-the-easy-and-secure-way'\u003ehosting\ngit repositories the easy and secure way\u003c/a\u003e.  Garry has given me permission to\ncopy his instructions and modify them for Bazitis, as long as I give him kudos,\nwhich I have done in this paragraph.  Thanks guys!\u003c/p\u003e\n\u003cp\u003e\u003ch2\u003eInstall bazitis\u003c/h2\u003e\u003c/p\u003e\n\u003cp\u003ebazitis is a tool for hosting bzr repositories (I'm repeating myself for\nthose who skim :)\u003c/p\u003e\n\u003cp\u003eThe first thing to do is grab a copy of bazitis and install it on your\nserver:\u003c/p\u003e\n\u003cpre class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ~/src\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ bzr branch lp:bazitis\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNext, install it like so:\u003c/p\u003e\n\u003cpre class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e bazitis\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ python setup.py install\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eDon't use --prefix unless you like self-inflicted pain. It is possible to\ninstall bazitis in a non-standard location, but it's not nice. Read the Caveats\nsection at the bottom and then come back here.\u003c/p\u003e\n\u003cp\u003eIf you get this error:\u003c/p\u003e\n\u003cpre class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e-bash: python: \u003cspan class=\"nb\"\u003ecommand\u003c/span\u003e not found\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eor\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eTraceback (most recent call last):\n  File \u0026quot;setup.py\u0026quot;, line 2, in ?\n    from setuptools import setup, find_packages\nImportError: No module named setuptools\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eYou have to install Python setuptools. On Debian/Ubuntu systems, it's just:\u003c/p\u003e\n\u003cpre class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ sudo apt-get install python-setuptools\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eFor other systems, someone tell me or leave a comment, so I can update this\nsection and improve this tutorial.\u003c/p\u003e\n\u003cp\u003eThe next thing to do is to create a user that will own the repositories you\nwant to manage. This user is usually called bzr, but any name will work, and\nyou can have more than one per system if you really want to. The user does not\nneed a password, but does need a valid shell (otherwise, SSH will refuse to\nwork).\u003c/p\u003e\n\u003cpre class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ sudo adduser \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    --system \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    --shell /bin/sh \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    --gecos \u003cspan class=\"s1\"\u003e\u0026#39;bzr version control\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    --group \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    --disabled-password \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    --home /home/bzr \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    bzr\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou may change the home path to suit your taste. A successful user creation\nwill look similar to:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eAdding system user `bzr'...\nAdding new group `bzr' (211).\nAdding new user `bzr' (211) with group `bzr'.\nCreating home directory `/home/bzr'.\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eYou will need a public SSH key to continue. If you don't have one, you may\ngenerate one on your local computer:\u003c/p\u003e\n\u003cpre class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ ssh-keygen -t rsa\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe public key will be in $HOME/.ssh/id_rsa.pub. Copy this file to your\nserver (the one running bazitis).\u003c/p\u003e\n\u003cp\u003eNext we will run a command that will sprinkle some magic into the home\ndirectory of the bzr user and put your public SSH key into the list of\nauthorized keys.\u003c/p\u003e\n\u003cpre class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ sudo -H -u bzr bazitis-init \u0026lt; /tmp/id_rsa.pub\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eid_rsa.pub above is your public SSH key that you copied to the server. I\nrecommend you put it in /tmp so the bzr user won't have permission problems\nwhen trying to read it. \u003c/p\u003e\n\u003cp\u003eHere some cool magic happens. Run this on your local machine:\u003c/p\u003e\n\u003cpre class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ bzr branch bzr+ssh://bzr@YOUR_SERVER_HOSTNAME/bazitis-admin\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e bazitis-admin\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou will now have a bazitis.conf file and keydir/ directory:\u003c/p\u003e\n\u003cpre class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e~/dev/bazitis-admin \u003cspan class=\"o\"\u003e(\u003c/span\u003emaster\u003cspan class=\"o\"\u003e)\u003c/span\u003e $ ls -l\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etotal \u003cspan class=\"m\"\u003e8\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e-rw-r--r--   \u003cspan class=\"m\"\u003e1\u003c/span\u003e garry  garry  \u003cspan class=\"m\"\u003e104\u003c/span\u003e Nov \u003cspan class=\"m\"\u003e13\u003c/span\u003e 05:43 bazitis.conf\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edrwxr-xr-x   \u003cspan class=\"m\"\u003e3\u003c/span\u003e garry  garry  \u003cspan class=\"m\"\u003e102\u003c/span\u003e Nov \u003cspan class=\"m\"\u003e13\u003c/span\u003e 05:43 keydir/\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis repository that you just cloned contains all the files (right now, only\n2) needed to create repositories for your projects, add new users, and defined\naccess rights. Edit the settings as you wish, commit, and push. Once pushed,\nbazitis will immediately make your changes take effect on the server. So we're\nusing Bzr to host the configuration file and keys that in turn define how our\nBzr hosting behaves. That's just plain cool.\u003c/p\u003e\n\u003cp\u003eFrom this point on, you don't need to be on your server. All configuration\ntakes place locally and you push the changes to your server when you're ready\nfor them to take effect.\u003c/p\u003e\n\u003cp\u003e\u003ch2\u003eCreating new repositories\u003c/h2\u003e\u003c/p\u003e\n\u003cp\u003eThis is where the fun starts. Let's create a new repository to hold our\nproject codenamed FreeMonkey.\u003c/p\u003e\n\u003cp\u003eOpen up bazitis.conf and notice the default configuration:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e[bazitis]\n\n[group bazitis-admin]\nwritable = bazitis-admin\nmembers = jdoe\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eYour \"members\" line will hold your key filename (without the .pub extension)\nthat is in keydir/. In my example, it is \"jdoe\", but for you it'll probably be\na combination of your username and hostname.\u003c/p\u003e\n\u003cp\u003eTo create a new repo, we just authorize writing to it and push. To do so,\nadd this to bazitis.conf:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e[group myteam]\nmembers = jdoe\nwritable = free_monkey\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis defines a new group called \"myteam\", which is an arbitrary string.\n\"jdoe\" is a member of myteam and will have write access to the \"free_monkey\"\nrepo.\u003c/p\u003e\n\u003cp\u003eSave this addition to bazitis.conf, commit and push it:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ bzr commit -m \u0026quot;Allow jdoe write access to free_monkey\u0026quot;\n$ bzr push bzr+ssh://bzr@YOUR_SERVER_HOSTNAME/bazitis-admin\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e You only have to add the path to the bazitis-admin repo the\nfirst time you push.  After that, it will be remembered and you can just type\n\"bzr push\"\u003c/p\u003e\n\u003cp\u003eNow the user \"jdoe\" has access to write to the repo named \"free_monkey\", but\nwe still haven't created a repo yet. What we will do is create a new repo\nlocally, and then push it:\u003c/p\u003e\n\u003cpre class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ mkdir free_monkey\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e free_monkey\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ bzr init\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# do some work, bzr add and commit files\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ bzr push bzr+ssh://bzr@YOUR_SERVER_HOSTNAME/free_monkey\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWith the final push, you're off to the races. The repository \"free_monkey\"\nhas been created on the server (in /home/bzr/repositories) and you're ready to\nstart using it like any ol' bzr repo.\u003c/p\u003e\n\u003cp\u003e\u003ch2\u003eAdding users\u003c/h2\u003e\u003c/p\u003e\n\u003cp\u003eThe next natural thing to do is to grant some lucky few commit access to the\nFreeMonkey project. This is a simple two step process.\u003c/p\u003e\n\u003cp\u003eFirst, gather their public SSH keys, which I'll call \"alice.pub\" and\n\"bob.pub\", and drop them into keydir/ of your local bazitis-admin repository.\nSecond, edit bazitis.conf and add them to the \"members\" list.\u003c/p\u003e\n\u003cpre class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e bazitis-admin\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ cp ~/alice.pub keydir/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ cp ~/bob.pub keydir/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ bzr add keydir/alice.pub keydir/bob.pub\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003co\u003eNote that the key filename must have a \u0026quot;.pub\u0026quot; extension.\u003c/p\u003e\u003c/p\u003e\n\u003cp\u003ebazitis.conf changes:\u003c/p\u003e\n\u003cpre class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e [group myteam]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gd\"\u003e- members = jdoe\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gd\"\u003e\u003c/span\u003e\u003cspan class=\"gi\"\u003e+ members = jdoe alice bob\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gi\"\u003e\u003c/span\u003e  writable = free_monkey\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eCommit and push:\u003c/p\u003e\n\u003cpre class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ bzr commit -m \u003cspan class=\"s2\"\u003e\u0026#34;Granted Alice and Bob commit rights to FreeMonkey\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ bzr push\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThat's it. Alice and Bob can now clone the free_monkey repository like so:\u003c/p\u003e\n\u003cpre class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ bzr branch bzr+ssh://bzr@YOUR_SERVER_HOSTNAME/free_monkey\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAlice and Bob will also have commit rights. \u003c/p\u003e\n\u003cp\u003e\u003ch2\u003eLimitations\u003c/h2\u003e\u003c/p\u003e\n\u003cp\u003e\u003cul\u003e\n\u003cli\u003eCurrently, bazitis doesn't support everything that gitosis does, like\npublic readonly access.  This is planned for the future.  \u003c/li\u003e\n \u003cli\u003eI haven't\ntested bazitis with shared bzr repositories.  I have no idea if it will work.\nIf you try this, let me know how it goes.\u003c/li\u003e\n \u003cli\u003eBazitis works best with\nbzr 1.9.  It works with earlier versions, but if you try to access a repository\nthat you do no have permission for, a huge ugly exception is thrown that would\nprobably lead a user to think something is wrong with bzr.  This is handled a\nlot better in later versions of bzr.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/p\u003e\n\u003cp\u003eAnd that's all.  Let me know how it works out for you!\u003c/p\u003e\n\u003cdiv class=\"restored-from-archive\"\u003e\n  \u003ch3\u003eRestored from VimTips archive\u003c/h3\u003e\n  \u003cp\u003e\n  This article was restored from the VimTips archive. There's probably\n  missing images and broken links (and even some flash references), but it\n  was still important to me to bring them back.\n  \u003c/p\u003e\n\u003c/div\u003e",
  "summary": "\u003cp\u003eAt work, I use git.  For Exaile I use bzr.  I like them both quite a bit.  At\nwork, we use \u003ca\nhref='http://eagain.net/gitweb/?p=gitosis.git;a=summary'\u003eGitosis\u003c/a\u003e to manage\nour repositories and I have to say, it's pretty damn cool.  Nothing quite like\nthis exists for bzr, so I ported Gitosis to bzr and called it Bazitis.  The\nlaunchpad project page can be found \u003ca\nhref='http://www.launchpad.net/bazitis'\u003ehere\u003c/a\u003e.  Here are the instructions on\nhow to use Bazitis:\u003c/p\u003e\n",
  "title": "Bazitis:  Gitosis for Bzr (Baazar)",
  "slug": "bazitis-gitosis-bzr-baazar",
  "tags": [
    "Programming",
    "Python",
    "Administration"
  ],
  "isPublished": true,
  "openGraph": {
    "title": "Bazitis:  Gitosis for Bzr (Baazar)",
    "type": "article"
  }
}