{
  "publishedAt": "2024-01-02T17:01:13-07:00",
  "body": "\u003cp\u003eI've been wanting to revive my blog for a while now, I've had a desire to write\nsome things about NeoVim in particular. Of course, I decided to write it myself\ninstead of using something like Medium. For me, it's an opportunity to learn\nsomething new, in this case, several new things.\u003c/p\u003e\n\u003cp\u003eThe stack I chose is:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://go.dev/\"\u003eGo\u003c/a\u003e - The fact that I chose Go is a bit odd, especially\nsince I thought I didn't like it (I tried it for a hackathon once and I\ndidn't \u0026quot;get\u0026quot; it at the time). I figured I was probably wrong, several\ndevelopers I know and respect were loving it. Also projects like\n\u003ca href=\"https://charm.sh\"\u003eCharm\u003c/a\u003e looked really ingriquing. It has a good track\nrecord for a backend.\nI'm happy to report that I was indeed wrong. Go is pretty cool!\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://templ.guide/\"\u003eTempl\u003c/a\u003e - Another strange choice; it looks like JSX\nand that's another technology I shied away from, I just didn't like the way\nit looked. Again, willing to admit I'm wrong. Templ just looked neat and I\nthought it would probably work well with the third technology I chose (it\ndoes).\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://htmx.org\"\u003eHTMX\u003c/a\u003e - It's all the rage isn't it? This is the one I was\nmost excited to try. For a primarily backend developer like me, it's a dream\ncome true. Now I don't have to write my types in Go, use those types to\nserialize to JSON, fetch via JS, and deserialize into another type written\nthere. I can use the same backend model and HTML can be the View.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://tailwindcss.com/\"\u003eTailwind\u003c/a\u003e - Anything to make CSS less annoying.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eLike I said, I've wanted to bring back my blog for a while. I've considered a\nbunch of technologies like Svelte, Vue, NestJS, etc, but one idea that I wanted\nwas to be able to write the articles in Markdown and have them convert\nautomatically to HTML. This way I can store the articles directly in the git\nrepository and edit them with the GitHub markdown editor. This also backs my\narticles up and keeps revisions of them automatically.\u003c/p\u003e\n\u003cp\u003eI considered having it read the articles from the filesystem at boot, and then\npopulating a database (I still might do this eventually), but then I\nthought: what's so bad about just reading them into memory and serving them\nfrom there? I could still keep the comments in a database if I add that feature\nlater. It's super fast (I'm getting ~40k req/s with 100 concurrent users using\nCassowary). But, what if I have a lot of articles in there? The server has to\nload them up, convert all the markdown to HTML, and then just hold them in memory.\u003c/p\u003e\n\u003cp\u003eI did some experiments by creating a bunch of Lorem Ipsum markdown articles and\nseeing how Go (and my code) handled processing them.\u003c/p\u003e\n\u003cp\u003eI started with 10,000 6KB articles, and the app handled it just fine. I tried\npushing it to 20,000 and then 30,000 articles.\u003c/p\u003e\n\u003cp\u003eAt 30,000 articles (which would give me enough leeway to write 2 articles every\nsingle day for the next 80 years), the app took about 9 seconds to read every\narticle from the filesystem, convert the markdown to html, and store them in\nmemory. The process took about 890MB, which is a lot, to be sure, but I am ok\nwith it because the memory will remain fairly constant, and lookups will be\nvery fast (and, let's be honest, I'm not writing 30,000 articles, it took me\nover 5 years to write 90).\u003c/p\u003e\n",
  "summary": "\u003cp\u003eI've been wanting to revive my blog for a while now, I've had a desire to write\nsome things about NeoVim in particular. Of course, I decided to write it myself\ninstead of using something like Medium. For me, it's an opportunity to learn\nsomething new, in this case, several new things.\u003c/p\u003e\n",
  "title": "New Blog!",
  "slug": "new-blog",
  "tags": [
    "Programming"
  ],
  "isPublished": true,
  "openGraph": {
    "title": "New Blog!",
    "type": "article"
  }
}